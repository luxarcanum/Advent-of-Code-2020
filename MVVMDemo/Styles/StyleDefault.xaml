<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <Style x:Key="GridMainwindow" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource Background}" />
    </Style>

    <Style x:Key="GridContent" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource ContainerPrimary}" />
    </Style>

    <Style x:Key="ContentBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ContainerSecondary}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColour}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <Style x:Key="ContainerStackPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!-- Gradient Colours -->
    <Style x:Key="BorderGradient" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#C9DBEA" Offset="0.0" />
                    <GradientStop Color="#B6D2EA" Offset="0.5" />
                    <GradientStop Color="#83BAEA" Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContainerPrimary}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource MenuBack}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuFont}" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource PrimaryDarker}" />
                <Setter Property="Foreground" Value="{DynamicResource FontDisabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource MenuBack}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuFont}" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource PrimaryDarker}" />
                <Setter Property="Foreground" Value="{DynamicResource FontDisabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Text Styles -->
    <Style x:Key="LabelHeader" TargetType="Label">
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BigFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontPrimary}" />
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Margin" Value="3,5,3,5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LabelHeaderRight" TargetType="Label">
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BigFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontPrimary}" />
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Margin" Value="3,5,3,5"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBlockLabel" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontPrimary}" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="3,5,3,5"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBoxNormal" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ContainerSecondary}" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontPrimary}" />
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Margin" Value="3,5,3,5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MaxWidth" Value="900"/>
    </Style>

    <Style x:Key="TextBoxReadOnly" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ContainerSecondary}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontDisabled}" />
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryDarker}" />
        <Setter Property="Margin" Value="3,5,3,5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MaxWidth" Value="900"/>
    </Style>

    <Style x:Key="BasicButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryColour}" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontPrimary}" />
        <Setter Property="Margin" Value="3,5,3,5" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ThreeDButtonStyle">
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontPrimary}" />
        <Setter Property="Margin" Value="3,5,3,5" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="TopLeftBorder" BorderBrush="{DynamicResource PrimaryLighter}" BorderThickness="3,3,0,0" />
                        <Border x:Name="BottomRightBorder" BorderBrush="{DynamicResource PrimaryDarker}" BorderThickness="0,0,3,3" />
                        <Grid Margin="3" Background="{DynamicResource PrimaryColour}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="TopLeftBorder" Property="BorderBrush" Value="{DynamicResource PrimaryDarker}"/>
                            <Setter TargetName="BottomRightBorder" Property="BorderBrush" Value="{DynamicResource PrimaryLighter}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="PressedButtonEffect" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="Transparent" BorderThickness="1" BorderBrush="{DynamicResource Obnoxious}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Obnoxious}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource FontPrimary}" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="Margin" Value="3,5,3,5" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>
